<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mtl.user.location.LocationMapper">
<!-- [사용자] 지역 별 여행지 리스트 조회 START -->
	<!-- 지역 별 여행지 리스트 총 개수 --> 
	<select id="getLocationListCount" parameterType="map">
		SELECT COUNT(*)
		FROM LOCATION
		<where>
			<if test="area != null and area != '' and area != 'ALL'">
				AND area = #{area} 		 <!-- 서울, 강릉, 여수, 부산, 제주 중 택1 -->
			</if>
			<if test="type != null and type != ''">
				AND type = #{type} 			 <!-- R: 맛집 / A: 관광지 중 택1 -->
			</if>
		</where>
	</select>

	<!-- 지역 별 여행지 리스트 --> 
	<select id="getLocationList" parameterType="map">
		SELECT idx AS location_idx, name, area, address_si, address_dong
		FROM LOCATION
		<where>
			<if test="area != null and area != '' and area != 'ALL'">
				AND area = #{area} 		 <!-- 서울, 강릉, 여수, 부산, 제주 중 택1 -->
			</if>
			<if test="type != null and type != ''">
				AND type = #{type} 			 <!-- R: 맛집 / A: 관광지 중 택1 -->
			</if>
		</where>
		ORDER BY create_date DESC, name 	 <!-- 최신순, 이름순 정렬 -->
		<!-- 페이징 처리 -->
		<if test="limit != null and offset != null">
			LIMIT ${limit} OFFSET ${offset}
		</if>
	</select>
	
	<!-- 지역 별 여행지 썸네일 사진 -->  <!-- 주의!! mapping_idx가 같아도, type(P: 숙소 / R: 객실 / V: 리뷰 / L: 여행지)에 따라 여러 사진이 나옴 -->
	<select id="getLocationImage" parameterType="map">
		SELECT idx AS image_idx, origin_filename, url
		FROM IMAGE
		WHERE thumbnail_yn='Y'
			  AND type = "L"  <!-- 필수 -->
			  AND mapping_idx = #{location_idx}
	</select>
	
	<!-- 지역 별 여행지 키워드 리스트 -->
	<select id="getLocationKeyword" parameterType="map">
		SELECT k.idx AS keword_idx, k.keyword
		FROM KEYWORD k JOIN LOCATION_KEYWORD lk ON (k.idx = lk.keyword_idx)
		WHERE lk.location_idx = #{location_idx}
		ORDER BY k.create_date DESC
	</select>
<!-- [사용자] 지역 별 여행지 리스트 조회 END-->	
	

<!-- [사용자] 여행지(관광지/맛집) 상세페이지 조회 START-->	
	<!-- 여행지(관광지/맛집) 상세페이지 사진 -->
	<select id="getLocationDetailImage" parameterType="map">
		SELECT i.idx AS image_idx, mapping_idx, url, origin_filename
		FROM IMAGE i JOIN LOCATION l ON(i.mapping_idx = l.idx)
		WHERE i.type="L" AND l.idx= #{location_idx} 
	</select>

	
	<!-- 여행지(관광지/맛집) 상세페이지 정보 :  
	LOCATION 여행지 테이블에서 name이름, address_si시/군/구, address_dong동, description설명, latitude위도, longitude경도 -->
	<select id="getLocationDetailDescription" parameterType="map">
		SELECT idx AS location_idx, name, address, address_si, address_dong, description, latitude, longitude
		FROM LOCATION
		WHERE idx = #{location_idx}
	</select>
	
	
	<!-- 여행지(관광지/맛집) 상세페이지 키워드 -->
	<select id="getLocationDetailKeyword" parameterType="map">
		SELECT keyword
		FROM LOCATION_KEYWORD lk JOIN KEYWORD k ON(lk.keyword_idx = k.idx)
		WHERE lk.location_idx = #{location_idx}
		ORDER BY k.create_date DESC
	</select>
<!-- [사용자] 여행지(관광지/맛집) 상세페이지 조회 END-->		

	<!-- 랜덤 여행지 -->
	<select id="getRandomLocationList" parameterType="HashMap">
		SELECT 
			  l.idx AS location_idx
			, l.name
			, l.area
			, (SELECT url FROM IMAGE WHERE mapping_idx = l.idx AND type = 'L' AND thumbnail_yn = 'Y') AS image
		FROM 
			LOCATION l
		ORDER BY RAND()
		LIMIT 4
	</select>
	
	<!-- 여행지 추천 -->
	<select id="getLocationListWithCustom" parameterType="HashMap">
		SELECT
			  l.idx AS location_idx
			, l.name
			, l.type
			, l.address
			, l.latitude
			, l.longitude
			, l.description
			, (SELECT url FROM IMAGE WHERE mapping_idx = l.idx AND type = 'L' AND thumbnail_yn = 'Y') AS image
		FROM
			LOCATION l
		WHERE
			l.area = #{area}
		AND l.idx IN (
			SELECT 	
				location_idx
			FROM
				LOCATION_KEYWORD lk
			<where>
				<if test="keywordList != null and keywordList.size() > 0">
				AND lk.keyword_idx IN
				<foreach item="keyword" collection="keywordList" separator="," open="(" close=")">
					#{keyword}
				</foreach>
				</if>
			</where>
		)
		ORDER BY l.create_date DESC, l.name 
	</select>

	<!-- 여행지 정보 -->
	<select id="getLocationMinDetail" parameterType="HashMap">
		SELECT 
			  l.idx AS location_idx
			, l.name
			, l.description
			, l.latitude
			, l.longitude
			, (SELECT url FROM IMAGE WHERE mapping_idx = l.idx AND type = 'L' AND thumbnail_yn = 'Y') AS image
		FROM 
			LOCATION l
		WHERE
			l.idx = #{location_idx}
	</select>
	
	<!-- 여행지 추천 저장 -->
	<insert id="insertCustomLocation" parameterType="HashMap">
		INSERT INTO RESERVATION_TOUR (
			  reservation_idx
			, location_idx
		) VALUES
		<foreach collection="locationList" item="location_idx" separator=",">
		(
			  #{reservation_idx}
			, #{location_idx}
		)
		</foreach>
	</insert>
	
	<!-- 여행지 추천 유무 확인 -->
	<select id="checkCustomLocation" parameterType="HashMap">
		SELECT 
			COUNT(*)
		FROM 
			RESERVATION_TOUR
		WHERE
			reservation_idx = #{reservation_idx}
	</select>
	
	<!-- 저장된 여행지 추천 리스트 -->
	<select id="getSavedCustomList" parameterType="HashMap">
		SELECT
			  l.idx AS location_idx
			, l.name
			, l.type
			, l.address
			, l.latitude
			, l.longitude
			, l.description
			, (SELECT url FROM IMAGE WHERE mapping_idx = l.idx AND type = 'L' AND thumbnail_yn = 'Y') AS image
		FROM 	
			RESERVATION_TOUR rt 
		JOIN LOCATION l 
		ON l.idx = rt.location_idx 
		WHERE
			rt.reservation_idx = #{reservation_idx}
		ORDER BY rt.idx
	</select>
</mapper>