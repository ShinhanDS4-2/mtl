<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mtl.user.login.LoginMapper">

    <!-- 사용자 정보 가져오기 -->
    <select id="getUserInfo" parameterType="map" resultType="map">
        SELECT 
              email,
              name,
              phone,
              birth
        FROM 
            USER
        WHERE 
            idx = #{userIdx}
        AND user_status = 'A'
    </select>

    <!-- 사용자 인증 정보 확인 -->
    <select id="getUserCheck" parameterType="map" resultType="map">
        SELECT
        	  idx AS user_idx, 
              email,
              name,
              phone,
              birth,
              user_status
        FROM 
            USER
        WHERE 
            email = #{email}
        AND password = #{password}
        AND user_status = 'A'
    </select>
    
    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="map">
	    INSERT INTO USER (email, password, name, birth, phone, create_date)
	    VALUES (#{email}, #{password}, #{name}, #{birth}, #{phone}, NOW())
	</insert>
	
	<!-- 회원가입 이메일 중복 체크 -->
	<select id="checkEmailDuplication" parameterType="String" resultType="int">
		SELECT COUNT(*)
	    FROM USER
	    WHERE email = #{email}
	</select>
	
	<!-- 마이페이지 수정 -->
	<update id="updateUser" parameterType="map">
	    UPDATE USER
	    SET name = #{name},
	        phone = #{phone}
	    WHERE idx = #{userIdx}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePassword" parameterType="map">
	    UPDATE USER
	    SET password = #{newPassword},
	    	password_update_date = now()
	    WHERE idx = #{userIdx}
	</update>
	
	<!-- 현재 비밀번호 확인 -->
	<select id="getPasswordCheck" parameterType="map" resultType="map">
	    SELECT
	        idx AS user_idx
	    FROM USER
	    WHERE idx = #{userIdx}
	      AND password = #{password} 
	</select>
	
	<!-- 회원탈퇴 -->
	<update id="deactivateUser" parameterType="map">
	    UPDATE USER
	    SET user_status = 'L',
	        leave_date = NOW()
	    WHERE idx = #{userIdx}
	</update>
	
	<!-- 사용자 정보 가져오기 list admin 사용자 관리에서 사용 -->
	<select id="getAllUser" parameterType="map" resultType="map">
	    SELECT 
	        idx AS user_idx,
	        email,
	        name,
	        phone,
	        DATE_FORMAT (create_date, "%Y-%m-%d") AS create_date,
	        user_status,
	        birth
	    FROM USER
	    <where>
		    <if test="status != null and status != ''">
		        AND user_status = #{status}
		    </if>
		    <if test="searchType == 'name' and searchKeyword != null and searchKeyword != ''">
		        AND name LIKE CONCAT('%', #{searchKeyword}, '%')
		    </if>
		    <if test="searchType == 'email' and searchKeyword != null and searchKeyword != ''">
		        AND email LIKE CONCAT('%', #{searchKeyword}, '%')
		    </if>
		</where>
	    ORDER BY create_date DESC
	    <if test="limit != '' and offset != ''">
	    	LIMIT ${limit} OFFSET ${offset}
	    </if>
	</select>
	
	<!-- 사용자 리스트 개수 -->
	<select id="getAllUserCnt" parameterType="map">
	    SELECT 
	        COUNT(*)
	    FROM USER
	    <where>
		    <if test="status != null and status != ''">
		        AND user_status = #{status}
		    </if>
		    <if test="searchType == 'name' and searchKeyword != null and searchKeyword != ''">
		        AND name LIKE CONCAT('%', #{searchKeyword}, '%')
		    </if>
		    <if test="searchType == 'email' and searchKeyword != null and searchKeyword != ''">
		        AND email LIKE CONCAT('%', #{searchKeyword}, '%')
		    </if>
		</where>
	</select>
	
	<!-- 사용자 정보 가져오기2 admin 사용자 관리에서 사용 views/user/userDetail.jsp에서 사용 -->
	<select id="getUserDetail" parameterType="map" resultType="map">
        SELECT 
            idx AS user_idx,
            email,
            name,
            birth,
            phone,
            DATE_FORMAT (create_date, "%Y-%m-%d") AS create_date,
            user_status
        FROM USER
        WHERE idx = #{userIdx}
    </select>
    
</mapper>