<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mtl.user.partner.PartnerMapper">

	<!-- 인기 숙소 리스트 -->
	<select id="getBestPartnerList" parameterType="HashMap">
		SELECT
			  idx AS partner_idx
			, name
			, area
			, score
			, type
		FROM 
			PARTNER
		WHERE
			approval_status = 'Y'
		ORDER BY total_reservation DESC, score DESC, name
		<if test="limit != null and offset != null">
			LIMIT ${limit} OFFSET ${offset}
		</if>
	</select>
	
	<!-- 인기 숙소 사진 리스트 -->
	<select id="getBestPartnerImage" parameterType="HashMap">
		SELECT 
			  idx AS image_idx
			, origin_filename
			, url
		FROM
			IMAGE
		WHERE
			type = 'P'
		AND
			mapping_idx = #{partner_idx}
		AND 
			thumbnail_yn = 'Y'
	</select>
	
	<!-- 숙소 검색 리스트 -->
	<select id="getPartnerList" parameterType="HashMap">
		<include refid="searchListSql"></include>
		ORDER BY p.score DESC, p.name
		<if test="limit != null and offset != null">
			LIMIT ${limit} OFFSET ${offset}
		</if>
	</select>
	
	<!-- 숙소 검색 리스트 개수 -->
	<select id="getPartnerCnt" parameterType="HashMap">
		SELECT
			COUNT(t.name)
		FROM (
			<include refid="searchListSql"></include>
		) t
	</select>
	
	<!-- 숙소 검색 공통 sql -->
	<sql id="searchListSql">
		SELECT 
			  p.idx AS partner_idx
		    , p.name
		    , p.area
		    , p.score
		    , p.type
		    , p.address
		    , (
		        SELECT SUM(
		            CASE 
		                WHEN WEEKDAY(date_range) IN (0, 1, 2, 3, 4) THEN r.basic_price
		                WHEN WEEKDAY(date_range) IN (5, 6) THEN r.weekend_price
		            END
		        ) AS total_price
		        FROM (
		            SELECT 
		            	DATE_ADD(#{start_date}, INTERVAL seq DAY) AS date_range
		            FROM (
		                SELECT 
		                	@row := @row + 1 AS seq
		                FROM (SELECT 0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) a,
		                     (SELECT 0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) b,
		                     (SELECT @row := -1) init
		            ) seq_gen
		            WHERE 
		            	DATE_ADD(#{start_date}, INTERVAL seq DAY) <![CDATA[ < ]]> #{end_date}
		        ) date_ranges
		        JOIN (SELECT 
					  	  MIN(r.basic_price) AS basic_price
					  	, MIN(r.weekend_price) AS weekend_price
						, r.idx
						, r.partner_idx
					  FROM 
					  	ROOM r
					  JOIN PARTNER p 
					  ON p.idx = r.partner_idx 
					  WHERE r.maximum >= #{guest}
					  GROUP BY p.idx) AS r 
		        ON r.partner_idx = p.idx
		    ) AS total_price
		FROM
			PARTNER p
		JOIN 
		    ROOM r
		ON p.idx = r.partner_idx
		LEFT JOIN 
		    RESERVATION rs 
		ON r.idx = rs.room_idx
		WHERE
			p.approval_status = 'Y'
		AND r.status = 'Y'
		AND r.maximum >= #{guest}
		AND r.count > (
			SELECT
				COUNT(*) AS cnt
			FROM
				RESERVATION rs2
			WHERE 
				rs2.partner_idx = r.partner_idx 
			AND (
			    #{start_date} <![CDATA[ < ]]> rs2.check_out_date AND #{end_date} > rs2.check_in_date
			)
		)
		<if test="area != null and area != ''">
		AND area = #{area}
		</if>
		<if test="partner_type_list != null and partner_type_list.size() > 0">
		AND p.type IN
		<foreach item="type" collection="partner_type_list" separator="," open="(" close=")">
			#{type}
		</foreach>
		</if>
		<if test="facilities_list != null and facilities_list.size() > 0">
		AND p.idx IN (
			SELECT 
				partner_idx 
			FROM
				PARTNER_FACILITIES
			WHERE
				facilities_idx IN 
			<foreach item="facilities" collection="facilities_list" separator="," open="(" close=")">
				#{facilities}
			</foreach>
		)
		</if>
		<if test="room_facilities_list != null and room_facilities_list.size() > 0">
		AND p.idx IN (
			SELECT 
				r.partner_idx 
			FROM
				ROOM_FACILITIES rf
			JOIN ROOM r
			ON r.idx = rf.room_idx 
			WHERE
				facilities_idx IN 
			<foreach item="facilities" collection="room_facilities_list" separator="," open="(" close=")">
				#{facilities}
			</foreach>
		)
		</if>
		<if test="keyword_list != null and keyword_list.size() > 0">
		AND p.idx IN (
			SELECT
				partner_idx
			FROM
				PARTNER_KEYWORD
			WHERE
				keyword_idx IN 
			<foreach item="keyword" collection="keyword_list" separator="," open="(" close=")">
				#{keyword}
			</foreach>
		)
		</if>
		<if test="min_price != null and max_price != null">
		AND (
	        SELECT
	            MIN(
	                CASE
	                    WHEN WEEKDAY(#{start_date}) IN (0, 1, 2, 3, 4) THEN r.basic_price
	                    WHEN WEEKDAY(#{start_date}) IN (5, 6) THEN r.weekend_price
	                END
	            )
	        FROM
	            ROOM r
	        WHERE
	            r.partner_idx = p.idx
	    ) BETWEEN ${min_price} AND ${max_price}
		</if>
		GROUP BY p.idx 
	</sql>
	
	<!-- 숙소 사진 리스트 -->
	<select id="getPartnerImageList" parameterType="HashMap">
		SELECT 
			  idx AS image_idx
			, origin_filename
			, url
			, thumbnail_yn
		FROM
			IMAGE
		WHERE
			type = 'P'
		AND
			mapping_idx = #{partner_idx}
	</select>
	
	<!-- 숙소 시설 리스트 -->
	<select id="getPartnerFacilities" parameterType="HashMap">
		SELECT
			f.name
		FROM 
			FACILITIES f
		JOIN 
			PARTNER_FACILITIES pf
		ON pf.facilities_idx = f.idx
		WHERE
			f.type = 'COMMON'
		AND pf.partner_idx = #{partner_idx}
	</select>
	
	<!-- 숙소 객실 시설 리스트 -->
	<select id="getPartnerRoomFacilities" parameterType="HashMap">
		SELECT 
			name
		FROM
			FACILITIES 
		WHERE
			idx IN (
			SELECT 
				  rf.facilities_idx 
			FROM
				ROOM_FACILITIES rf 
			JOIN ROOM r 
			ON r.idx = rf.room_idx 
			WHERE r.partner_idx = #{partner_idx}
		)
	</select>

	<!-- 숙소 이용안내 리스트 -->
	<select id="getPartnerNoticeList" parameterType="HashMap">
		SELECT 
			content
		FROM
			PARTNER_NOTICE
		WHERE
			partner_idx = #{partner_idx}
		ORDER BY
			create_date DESC
	</select>
	
	<!-- 숙소 상세 -->
	<select id="getPartnerDetail" parameterType="HashMap">
		SELECT
			  p.name
			, p.phone
			, p.address
			, p.area
			, p.description
			, p.type
			, p.score
			, p.latitude
			, p.longitude
		FROM
			PARTNER p
		WHERE
			idx = #{partner_idx}
	</select>
	
	<!-- 숙소 별 객실 리스트 -->
	<select id="getRoomList" parameterType="HashMap">
		SELECT
			  r.idx AS room_idx
			, r.room_type
			, r.description
			, r.standard
			, r.maximum
			, (
		        SELECT SUM(
		            CASE 
		                WHEN WEEKDAY(date_range) IN (0, 1, 2, 3, 4) THEN r.basic_price
		                WHEN WEEKDAY(date_range) IN (5, 6) THEN r.weekend_price
		            END
		        ) AS total_price
		        FROM (
		            SELECT 
		            	DATE_ADD(#{start_date}, INTERVAL seq DAY) AS date_range
		            FROM (
		                SELECT 
		                	@row := @row + 1 AS seq
		                FROM (SELECT 0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) a,
		                     (SELECT 0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6) b,
		                     (SELECT @row := -1) init
		            ) seq_gen
		            WHERE 
		            	DATE_ADD(#{start_date}, INTERVAL seq DAY) <![CDATA[ < ]]> #{end_date}
		        ) date_ranges
		    ) AS total_price
		FROM
			ROOM r
		WHERE
			r.partner_idx = #{partner_idx}
		<if test="guest != null and guest != ''">
		AND r.maximum >= #{guest}
		</if>
		<if test="start_date != null and end_date != null">
		AND r.count > (
			SELECT
				COUNT(*) AS cnt
			FROM
				RESERVATION rs2
			WHERE 
				rs2.partner_idx = r.partner_idx 
			AND (
			    #{start_date} <![CDATA[ < ]]> rs2.check_out_date AND #{end_date} > rs2.check_in_date
			)
		)
		</if>
	</select>
	
	<!-- 객실 이미지 -->
	<select id="getRoomImage" parameterType="HashMap">
		SELECT
			url
		FROM
			IMAGE
		WHERE
			mapping_idx = #{room_idx}
		AND type = 'R'
	</select>
	
	<!-- 객실 시설 리스트 -->
	<select id="getRoomFacilities" parameterType="HashMap">
		SELECT
			f.name
		FROM 
			FACILITIES f
		JOIN 
			ROOM_FACILITIES rf
		ON rf.facilities_idx = f.idx
		WHERE
			f.type = 'ROOM'
		AND rf.room_idx = #{room_idx}
	</select>
	
	<!-- 객실 상세 -->
	<select id="getRoomDetail" parameterType="HashMap">
		SELECT
			  p.name
			, p.idx AS partner_idx
			, p.address
			, p.check_in
			, p.check_out
			, r.room_type
			, r.description
			, (SELECT url FROM IMAGE WHERE type = 'P' AND mapping_idx = p.idx AND thumbnail_yn = 'Y') AS image
		FROM
			ROOM r
		JOIN
			PARTNER p
		ON r.partner_idx = p.idx
		WHERE r.idx = #{room_idx}
	</select>
	
	<!-- 숙소 위치 정보 -->
	<select id="getPartnerGeo" parameterType="HashMap">
		SELECT
			  p.area
			, p.address
			, p.address_si
			, p.address_dong
			, p.latitude
			, p.longitude
		FROM	  
			PARTNER p
		JOIN RESERVATION r 
		ON r.partner_idx = p.idx 
		WHERE r.idx = #{reservation_idx}
	</select>
</mapper>