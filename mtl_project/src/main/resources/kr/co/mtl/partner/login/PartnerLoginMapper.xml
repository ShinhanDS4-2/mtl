<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mtl.partner.login.PartnerLoginMapper">

    <!-- 사용자 정보 가져오기 -->
    <select id="getUserInfo" parameterType="map" resultType="map">
        SELECT 
              email,
              name,
              phone,
              business_name,
              business_number,
              address,
              business_phone,
              account_bank,
              account_number,
              DATE_FORMAT (password_update_date, "%Y-%m-%d") AS password_update_date
        FROM 
            PARTNER
        WHERE 
            idx = #{partnerIdx}
    </select>

    <!-- 사용자 인증 정보 확인 -->
    <select id="getUserCheck" parameterType="map" resultType="map">
        SELECT
        	  idx AS partner_idx, 
              email,
              name,
              phone
        FROM 
           PARTNER
        WHERE 
            email = #{email}
        AND password = #{password}
        AND approval_status = 'Y'
    </select>
    
    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="map">
	    INSERT INTO PARTNER (email, password, name, business_name, business_number, phone, business_phone, create_date)
	    VALUES (#{email}, #{password}, #{name}, #{business_name}, #{business_number}, #{phone}, #{business_phone}, NOW())
	</insert>
	
	<!-- 회원가입 이메일 중복 체크 -->
	<select id="checkEmailDuplication" parameterType="String" resultType="int">
		SELECT COUNT(*)
	    FROM PARTNER
	    WHERE email = #{email}
	</select>
	
	<!-- 마이페이지 회원 정보 수정 -->
	<update id="updateUser" parameterType="map">
	    UPDATE PARTNER
	    SET 
	    	  business_phone = #{phone}
	    	, business_name = #{name}
	    WHERE idx = #{partnerIdx}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePassword" parameterType="map">
	    UPDATE PARTNER
	    SET password = #{newPassword},
	    	password_update_date = now()
	    WHERE idx = #{partnerIdx}
	</update>
	
	<!-- 현재 비밀번호 확인 -->
	<select id="getPasswordCheck" parameterType="map" resultType="map">
	    SELECT
	        idx AS partner_idx
	    FROM PARTNER
	    WHERE idx = #{partnerIdx}
	      AND password = #{password} 
	</select>
	
	<!-- 마이페이지 업체 정보 수정 -->
	<update id="updateBusiness" parameterType="map">
	    UPDATE PARTNER
	    SET account_bank = #{account_bank},
	        account_number = #{account_number}
	    WHERE idx = #{partnerIdx}
	</update>
    
    <!-- 판매자 정보 가져오기 list admin 사용자 관리에서 사용 + 검색-->
	<select id="getAllPartner" parameterType="map" resultType="map">
	    SELECT 
	        idx AS partner_idx,
	        name,
	        email,
	        phone,
	        DATE_FORMAT (create_date, "%Y-%m-%d") AS create_date,
	        approval_status
	    FROM PARTNER
	    <where>
		    <if test="status != null and status != ''">
		        AND approval_status = #{status}
		    </if>
		    <if test="searchType == 'name' and searchKeyword != null and searchKeyword != ''">
		        AND name LIKE CONCAT('%', #{searchKeyword}, '%')
		    </if>
		    <if test="searchType == 'email' and searchKeyword != null and searchKeyword != ''">
		        AND email LIKE CONCAT('%', #{searchKeyword}, '%')
		    </if>
		</where>
	    ORDER BY create_date DESC
	    <if test="limit != null and offset != null">
	    	LIMIT ${limit} OFFSET ${offset}
	    </if>
	</select>

    <!-- 판매자 정보 가져오기 list 개수 -->
	<select id="getAllPartnerCnt" parameterType="map">
	    SELECT 
	        COUNT(*)
	    FROM PARTNER
	    <where>
		    <if test="status != null and status != ''">
		        AND approval_status = #{status}
		    </if>
		    <if test="searchType == 'name' and searchKeyword != null and searchKeyword != ''">
		        AND name LIKE CONCAT('%', #{searchKeyword}, '%')
		    </if>
		    <if test="searchType == 'email' and searchKeyword != null and searchKeyword != ''">
		        AND email LIKE CONCAT('%', #{searchKeyword}, '%')
		    </if>
		</where>
	</select>
	
	<!-- 판매자 정보 가져오기2 admin 사용자 관리에서 사용 views/admin/user/partnerDetail.jsp에서 사용 -->
	<select id="getPartnerDetail" parameterType="map" resultType="map">
        SELECT 
            idx AS partner_idx,
	        email,
	        name,
	        business_number,
	        business_phone,
	        DATE_FORMAT (create_date, "%Y-%m-%d") AS create_date,
	        approval_status
	    FROM PARTNER
        WHERE idx = #{partnerIdx}
    </select>
    
    <!-- 판매자 상태 승인 -->
    <update id="updateApprovalStatus" parameterType="map">
	    UPDATE PARTNER
	    SET approval_status = 'Y'
	    WHERE idx = #{partner_idx}
	</update>

</mapper>